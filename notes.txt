// WSL installed (Linux environment)
// The files are now stored in Windows here: \\wsl$\Ubuntu\home\chieftec

// VSCode: Ctrl + Shift + P
// VSCode Command Palette: WSL: New WSL window

// If "VS Code Server for WSL closed unexpectedly"
// Open Powershell (not as admin)
// wsl --shutdown
// wsl
chieftec@Chieftec-PC:~$

For å installere Solana CLI
sh -c "$(curl -sSfL https://release.solana.com/stable/install)"

Legg Solana CLI til i PATH
export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"

Installer Irys (tidligere bundlr)
npm install -g @irys/cli


Check globally installed packages
pnpm list -g --depth=0
npm list -g --depth=0
/home/chieftec/.nvm/versions/node/v22.12.0/lib
├── @irys/cli@0.0.16
├── corepack@0.30.0
├── npm@11.0.0
└── yarn@1.22.22

nvm --version
0.40.1
urge --version
v22.12.0
npm --version
11.0.0
pnpm --version
9.15.2
solana --version
solana-cli 2.0.21 (src:99ac0105; feat:607245837, client:Agave)

Find folders in Windows Explorer
\\wsl$\Ubuntu\
\\wsl .localhost\Ubuntu\

Create a blank project (inside folder)
pnpm init
(This creates a package.json file.)

Configure Solana CLI
This configures Solana CLI to use the specified RPC URL and keypair for future commands:
solana config set --url https://api.devnet.solana.com --keypair ~/.config/solana/id.json

Generate public key
solana-keygen pubkey
Sample output: 5EVDTSVL25Ny1xXitQkTTA2WXc2UHuSPrw7f7S4JM8u5

Check Solana configuration
solana config get
Sample Output:
Config File: /home/chieftec/.config/solana/cli/config.yml
RPC URL: https://api.devnet.solana.com
WebSocket URL: wss://api.devnet.solana.com / (computed)
Keypair Path: /home/chieftec/.config/solana/id.json
Commitment: confirmed

solana config set --url https://api.devnet.solana.com # For devnet
solana config set --url https ://api.mainnet-beta.solana.com # For the mainnet

Install packages locally
pnpm add @metaplex-foundation/umi@latest @solana/web3.js@latest
pnpm add @metaplex-foundation/mpl-token-metadata@latest
pnpm add @metaplex-foundation/umi-bundle-defaults@latest
pnpm add @solana/spl-token@latest
pnpm add @metaplex-foundation/umi-web3js-adapters
 (Also required to upload files to Arweave via Irys.)

Install support for the Arweave library
pnpm add arweave@latest

Install support for Fs and Path in Node
pnpm add @types/node@latest

Install .env file support
pnpm add dotenv@latest
(If .env doesn't work, you can create the file manually.)

Install Solana helpers
pnpm add @solana-developers/helpers@latest

Install support for Iry's library
pnpm add @irys/upload@latest
pnpm add @irys/upload-solana@latest

Install package for running TypeScript
pnpm add esrun@latest

bs58.encode is used to convert the key to Base58,
since Node.js does not support 'base58' in Buffer.toString.
pnpm add bs58

Enables us to execute TypeScript files directly
added to devDependencies-section (with -D)
npm add -D ts-node


Run irys-upload.ts to upload all necessary files:
npx esrun 1-irys-upload.ts

Once the files are uploaded, check them via the gateway:
Irys: https://gateway.irys.xyz/[ transaction-id]    (devnet)
Arweave: https://arweave.net/[transaction-id]       (mainnet-beta)

Run create-collection.ts to create a collection NFT:
npx esrun 2-create-collection.ts

Run create-nft.ts to create individual NFTs:
npx esrun 3-create-nfts.ts

Run verify-nft.ts to verify NFTs:
npx esrun 4-verify-nfts.ts

Fjern feilmelding
export NODE_OPTIONS="--no-deprecation"

Alternativt spesifiser nettverket direkte ved kjøring
CLUSTER=devnet npx esrun 1-irys-uploads.ts
CLUSTER=devnet npx esrun 2-create-ruleset.ts
CLUSTER=devnet npx esrun 3-create-collection.ts
CLUSTER=devnet npx esrun 4-create-pnfts.ts
CLUSTER=devnet npx esrun 5-verify-pnfts.ts
CLUSTER=devnet npx esrun 6-burn-pnft.ts

CLUSTER=mainnet npx esrun 1-irys-uploads.ts
CLUSTER=mainnet npx esrun 1-arweave-uploads.ts
CLUSTER=mainnet-beta npx esrun 2-create-ruleset.ts
CLUSTER=mainnet-beta npx esrun 3-create-collection.ts
CLUSTER=mainnet-beta npx esrun 4-create-pnfts.ts
CLUSTER=mainnet-beta npx esrun 5-verify-pnfts.ts
CLUSTER=mainnet-beta npx esrun 6-burn-pnft.ts

installer avhengigheter i proskjektet
pnpm install


pnpm add @metaplex-foundation/mpl-token-auth-rules@latest




For å overføre arbeidet ditt fra devnet til mainnet med ekte Solana og Arweave, 
må du gjøre noen forberedelser. Her er en trinn-for-trinn-guide:

1. Opprett en ny lommebok for mainnet
Generer en ny Solana-lommebok for mainnet-beta:

solana-keygen new --outfile ~/.config/solana/id.json

Bekreft adressen: solana address
Dette gir deg din mainnet-adresse som du vil bruke til ekte Solana-transaksjoner.

2. Konfigurer Solana for mainnet
Endre nettverket til mainnet-beta: solana config set --url https://api.mainnet-beta.solana.com

Verifiser konfigurasjonen: solana config get
Sørg for at RPC URL peker til https://api.mainnet-beta.solana.com.

3. Fyll opp lommeboken med SOL
Kjøp Solana (SOL) fra en børs som støtter uttak til din mainnet-adresse.
Overfør SOL til adressen du genererte i steg 1.

4. Sett opp Arweave-lommebok
Arweave støtter også Solana-signering via kompatible tjenester, men du trenger typisk en separat Arweave-lommebok:
Opprett en Arweave-lommebok via en tjeneste som ArConnect eller Arweave.app.
Last ned nøkkelfilen for lommeboken din, som kreves for opplasting.

5. Oppdater miljøvariabler
Oppdater .env-filen din med riktig nettverk og nøkler:
PRIVATE_KEY=[din mainnet privatnøkkel som base58]
BASE_IRYS_URL=https://mainnet.irys.xyz
CLUSTER=mainnet-beta
BASE_ARWEAVE_URL=https://arweave.net

6. Gjennomgå og oppdater koden
Dobbeltsjekk at koden din peker til riktige URL-er for både Solana og Arweave:
CLUSTER må være mainnet-beta.
BASE_IRYS_URL og BASE_ARWEAVE_URL må peke til deres respektive mainnet-gatewayer.

7. Test prosessen med små ressurser
Start med en liten testopplasting for å verifisere at alt fungerer.
Last opp én samling eller NFT til Arweave og Solana og bekreft via gateway-URL-ene.

8. Sikkerhetskopi
Oppbevar nøklene dine trygt og unngå å dele dem. Bruk en hardware-lommebok hvis mulig for høyere sikkerhet.

9. Overfør alt fra devnet til mainnet
Gjenta hele prosessen du har gjort på devnet, men med de oppdaterte konfigurasjonene og mainnet-ressursene.

Viktige tips:
Gasskostnader: Sørg for at du har tilstrekkelig SOL i lommeboken din til å dekke transaksjonskostnader.
Arweave opplastningsgebyr: Sørg for at Arweave-lommeboken har tilstrekkelige midler for å betale for permanent lagring.
Test alt nøye før du satser på større ressurser.
Når du har gjennomført dette, vil du være klar til å operere på mainnet med ekte Solana og Arweave-integrasjon!



Filrettigheter: 
Sørg for at nøkkelfilene har strenge filrettigheter, slik at kun deg kan lese dem.
chmod 600 ~/.config/solana/devnet-id.json
chmod 600 ~/.config/solana/mainnet-id.json

Sikkerhetskopiering: 
Sørg for at du har sikre sikkerhetskopier av dine nøkkelfiler og seed-fraser på et trygt sted.

Sjekk solana config:
solana config get

Solana devnet
solana config set --url https://api.devnet.solana.com
solana config set --keypair ~/NFT-projects/Solana/drain-the-swamp/wallets/devnet-id.json 

Solana mainnet-beta
solana config set --url https://api.mainnet-beta.solana.com
solana config set --keypair ~/NFT-projects/Solana/drain-the-swamp/wallets/mainnet-id.json 


Bruke .env.devnet (solana config inkludert):
CLUSTER=devnet pnpm run 1-irys-uploads:devnet

Beregn bruk av AR token:
https://ardrive.io/how-much-does-it-cost-to-store-on-arweave/

Bruke .env.mainnet (solana config inkludert):
CLUSTER=mainnet pnpm run 1-irys-uploads:mainnet




Her er en ASCII-tabell som viser hvordan ulike kombinasjoner av Compute Unit Limit og Compute Unit Price 
påvirker den totale kostnaden for en minting-prosess, med en grunnpris på 0,02 SOL:

+---------------------+-------------------------------+------------------------+--------------------+
| Compute Unit Limit  | Compute Unit Price (μLamports) | Prioritetsavgift (SOL) | Total kostnad (SOL) |
+---------------------+-------------------------------+------------------------+--------------------+
|             200 000 |                           0    |               0        |                     |
|             200 000 |                         500    |               0,0001   |         0,02010474  |
|             200 000 |                       1 000    |               0,0002   |         0,02020474  |
|             200 000 |                       2 000    |               0,0004   |         0,02040474  |
|             500 000 |                         500    |               0,00025  |         0,02135474  |
|             500 000 |                       1 000    |               0,0005   |         0,02160474  |
|             500 000 |                       2 000    |               0,001    |         0,02210474  |
|           1 000 000 |                         500    |               0,0005   |         0,02160474  |
|           1 000 000 |                       1 000    |               0,001    |         0,02210474  |
|           1 000 000 |                       2 000    |               0,002    |         0,02310474  |
|           1 400 000 |                         500    |               0,0007   |         0,02180474  |
|           1 400 000 |                       1 000    |               0,0014   |         0,02250474  |
|           1 400 000 |                       2 000    |               0,0028   |         0,02390474  |
+---------------------+-------------------------------+------------------------+--------------------+

Merk: Prioritetsavgiften beregnes som Compute Unit Limit × Compute Unit Price. For eksempel vil 
en Compute Unit Limit på 200 000 og en Compute Unit Price på 1 000 μLamports resultere i 
en prioritetsavgift på 0,0002 SOL (200 000 × 1 000 μLamports = 200 000 000 μLamports = 0,0002 SOL).

Ved å justere disse verdiene kan du balansere mellom kostnad og prioritet for dine transaksjoner. 
Høyere prioritetsavgifter kan føre til raskere behandling, spesielt under høy nettverksbelastning.


pNFT-er på mainnet-beta
5pPzfYaTaPjfk9HKJKm7xkKCKd9y1CmTW1nYDbBXcZv3
8bx1rEJidVHzSdoeuvRVxb9yjswPzjC24NQXFb4Wjvi4
EWgzg3FFPyrtumLiy2ecfnRSEtJqfWU9QJGy3Ww3ahnk
BZKSAp7zVFezQLAQz2MVH9kSxJoodvDRvdQor1yAUGhi
4aDfp4g9diVhvctgPfX2rjAVrMj88iDraLBEJGjWoB9H
75ZaXVTeHCajB1WJ3ChnaDW4go6rRJRYsAiJRQ5Ni7ac
D2u1rJ6gG9CKuw13ctJ2BeJg3Sv5aawxVpZLwqPd8CnD
FBvCVbUEDLKSvQ5QiQnXtRurdKrgaWw78TPPfDJ5waVk

